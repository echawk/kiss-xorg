#!/bin/sh -e

export DESTDIR="$1"

export CCACHE_SLOPPINESS=time_macros,include_file_mtime

patch -p1 < icu-76.patch

# Use clang if installed, decreases compilation time by 25%.
if command -v clang; then
    export CC=clang
    export CXX=clang++
    if command -v lld; then
        export LDFLAGS="$LDFLAGS -fuse-ld=lld"
    fi
fi

# Sbase does not have ln -n flag. So we have to remove it
sed 's/ln -sfh/ln -sf/g' Source/WebCore/Scripts/generate-derived-sources.sh > _
mv -f _ Source/WebCore/Scripts/generate-derived-sources.sh

sed 's/ln -n -s -f/ln -sf/g' Source/JavaScriptCore/GLib.cmake > _
mv -f _ Source/JavaScriptCore/GLib.cmake

sed 's/ln -n -s -f/ln -sf/g' Source/WebKit/PlatformGTK.cmake > _
mv -f _ Source/WebKit/PlatformGTK.cmake

sed 's/ln -n -s -f/ln -sf/g' Source/WebKit/PlatformWPEDeprecated.cmake > _
mv -f _ Source/WebKit/PlatformWPEDeprecated.cmake

sed 's/ln -n -s -f/ln -sf/g' Source/WebKit/PlatformGTKDeprecated.cmake  > _
mv -f _ Source/WebKit/PlatformGTKDeprecated.cmake

# Remove gettext requirement.
sed 's/ngettext/printf/g' Tools/MiniBrowser/gtk/BrowserDownloadsBar.c > _
mv -f _ Tools/MiniBrowser/gtk/BrowserDownloadsBar.c
sed '/po_files \*\.po/d' Source/WebCore/platform/gtk/po/CMakeLists.txt > _
mv -f _ Source/WebCore/platform/gtk/po/CMakeLists.txt
sed '/if.*GETTEXT_FOUND/,/^endif/d' Source/WebCore/platform/gtk/po/CMakeLists.txt > _
mv -f _ Source/WebCore/platform/gtk/po/CMakeLists.txt
sed '/^GETTEXT_C/d' Source/WebCore/platform/gtk/po/CMakeLists.txt > _
mv -f _ Source/WebCore/platform/gtk/po/CMakeLists.txt

# Fix clang build.
sed -e '/LC_ALL/d' -e '/WTFLogAlways/d' Source/JavaScriptCore/jsc.cpp > _
mv -f _ Source/JavaScriptCore/jsc.cpp

# Webkit's CMake configuration forces color output using clang-specific flags
# when using Ninja as the CMAKE_GENERATOR. We should disable them.
sed -e "s/-fcolor-diagnostics//" \
    -e "s/-fdiagnostics-color=always/-fdiagnostics-color=never/" \
    Source/cmake/WebKitCompilerFlags.cmake > _
mv -f _ Source/cmake/WebKitCompilerFlags.cmake

# Reduce memory usage.
export LDFLAGS="$LDFLAGS -Wl,--no-keep-memory"

# If using mold as system linker, switch since mold cannot link all of webkit (yet).
if ld --version | grep mold; then
    for linker in ld.bfd ld.lld ld.gold; do
        if command -v "$linker"; then
            ln -s "/usr/bin/$linker" ld
            break
        fi
    done
    export PATH="$PWD:$PATH"
fi

cmake -B build \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_INSTALL_LIBEXECDIR=/usr/lib \
    -DLIB_INSTALL_DIR=/usr/lib \
    -DPORT=GTK \
    -DCMAKE_SKIP_RPATH=ON \
    -DENABLE_API_TESTS=OFF \
    -DENABLE_BUBBLEWRAP_SANDBOX=OFF \
    -DENABLE_SAMPLING_PROFILER=OFF \
    -DENABLE_GEOLOCATION=OFF \
    -DENABLE_INTROSPECTION=OFF \
    -DENABLE_DOCUMENTATION=OFF \
    -DENABLE_MINIBROWSER=OFF \
    -DENABLE_SPELLCHECK=OFF \
    -DENABLE_PDFJS=OFF \
    -DENABLE_GAMEPAD=OFF \
    -DENABLE_JOURNALD_LOG=OFF \
    -DENABLE_WAYLAND_TARGET=OFF \
    -DENABLE_JIT=OFF \
    -DENABLE_C_LOOP=OFF \
    -DENABLE_VIDEO=OFF \
    -DENABLE_WEB_AUDIO=OFF \
    -DUSE_GSTREAMER_GL=OFF \
    -DUSE_GSTREAMER_TRANSCODER=OFF \
    -DUSE_SOUP2=OFF \
    -DUSE_LIBHYPHEN=OFF \
    -DUSE_LIBSECRET=OFF \
    -DUSE_SKIA=OFF \
    -DUSE_JPEGXL=OFF \
    -DUSE_WOFF2=OFF \
    -DUSE_AVIF=OFF \
    -DUSE_LIBBACKTRACE=OFF \
    -DUSE_GTK4=OFF \
    -DUSE_SYSTEM_MALLOC=ON \
    -DUSE_SYSTEM_SYSPROF_CAPTURE=OFF \
    -DUSE_LCMS=OFF \
    -Wno-dev

cmake --build build
cmake --install build
